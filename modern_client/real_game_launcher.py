#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Modern Lineage II Client v5.0 - Real Game Launcher
–ù–∞—Å—Ç–æ—è—â–∏–π –∏–≥—Ä–æ–≤–æ–π –∫–ª–∏–µ–Ω—Ç —Å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
"""

import tkinter as tk
from tkinter import ttk, messagebox, filedialog
import subprocess
import threading
import time
import os
import sys
import json
from PIL import Image, ImageTk
import webbrowser

class ModernLineage2Client:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("Modern Lineage II Client v5.0")
        self.root.geometry("1200x800")
        self.root.configure(bg='#1a1a1a')
        
        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        self.server_ip = tk.StringVar(value="127.0.0.1")
        self.server_port = tk.StringVar(value="2106")
        self.game_port = tk.StringVar(value="7777")
        self.username = tk.StringVar(value="admin")
        self.password = tk.StringVar(value="admin")
        self.character_name = tk.StringVar(value="TestPlayer")
        self.is_connected = False
        self.game_process = None
        
        self.setup_ui()
        self.load_config()
        
    def setup_ui(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        
        # –ì–ª–∞–≤–Ω—ã–π —Ñ—Ä–µ–π–º
        main_frame = tk.Frame(self.root, bg='#1a1a1a')
        main_frame.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_frame = tk.Frame(main_frame, bg='#1a1a1a')
        title_frame.pack(fill=tk.X, pady=(0, 20))
        
        title_label = tk.Label(
            title_frame, 
            text="üéÆ Modern Lineage II Client v5.0", 
            font=("Arial", 24, "bold"),
            fg='#00ff00',
            bg='#1a1a1a'
        )
        title_label.pack()
        
        subtitle_label = tk.Label(
            title_frame,
            text="–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –≥—Ä–∞—Ñ–∏–∫–æ–π",
            font=("Arial", 12),
            fg='#cccccc',
            bg='#1a1a1a'
        )
        subtitle_label.pack()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ notebook –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
        notebook = ttk.Notebook(main_frame)
        notebook.pack(fill=tk.BOTH, expand=True)
        
        # –í–∫–ª–∞–¥–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        self.setup_connection_tab(notebook)
        
        # –í–∫–ª–∞–¥–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        self.setup_character_tab(notebook)
        
        # –í–∫–ª–∞–¥–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.setup_settings_tab(notebook)
        
        # –í–∫–ª–∞–¥–∫–∞ –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º
        self.setup_game_systems_tab(notebook)
        
        # –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.setup_control_panel(main_frame)
        
    def setup_connection_tab(self, notebook):
        """–í–∫–ª–∞–¥–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É"""
        conn_frame = tk.Frame(notebook, bg='#2a2a2a')
        notebook.add(conn_frame, text="üåê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
        server_frame = tk.LabelFrame(conn_frame, text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞", fg='white', bg='#2a2a2a')
        server_frame.pack(fill=tk.X, padx=10, pady=10)
        
        tk.Label(server_frame, text="IP –∞–¥—Ä–µ—Å:", fg='white', bg='#2a2a2a').grid(row=0, column=0, sticky=tk.W, padx=5, pady=5)
        tk.Entry(server_frame, textvariable=self.server_ip, width=20).grid(row=0, column=1, padx=5, pady=5)
        
        tk.Label(server_frame, text="–ü–æ—Ä—Ç –≤—Ö–æ–¥–∞:", fg='white', bg='#2a2a2a').grid(row=0, column=2, sticky=tk.W, padx=5, pady=5)
        tk.Entry(server_frame, textvariable=self.server_port, width=10).grid(row=0, column=3, padx=5, pady=5)
        
        tk.Label(server_frame, text="–ü–æ—Ä—Ç –∏–≥—Ä—ã:", fg='white', bg='#2a2a2a').grid(row=1, column=0, sticky=tk.W, padx=5, pady=5)
        tk.Entry(server_frame, textvariable=self.game_port, width=10).grid(row=1, column=1, padx=5, pady=5)
        
        # –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        auth_frame = tk.LabelFrame(conn_frame, text="–£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", fg='white', bg='#2a2a2a')
        auth_frame.pack(fill=tk.X, padx=10, pady=10)
        
        tk.Label(auth_frame, text="–õ–æ–≥–∏–Ω:", fg='white', bg='#2a2a2a').grid(row=0, column=0, sticky=tk.W, padx=5, pady=5)
        tk.Entry(auth_frame, textvariable=self.username, width=20).grid(row=0, column=1, padx=5, pady=5)
        
        tk.Label(auth_frame, text="–ü–∞—Ä–æ–ª—å:", fg='white', bg='#2a2a2a').grid(row=0, column=2, sticky=tk.W, padx=5, pady=5)
        tk.Entry(auth_frame, textvariable=self.password, show="*", width=20).grid(row=0, column=3, padx=5, pady=5)
        
        # –ö–Ω–æ–ø–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        button_frame = tk.Frame(conn_frame, bg='#2a2a2a')
        button_frame.pack(fill=tk.X, padx=10, pady=10)
        
        self.connect_btn = tk.Button(
            button_frame, 
            text="üîå –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É", 
            command=self.connect_to_server,
            bg='#00aa00',
            fg='white',
            font=("Arial", 12, "bold"),
            width=20
        )
        self.connect_btn.pack(side=tk.LEFT, padx=5)
        
        self.disconnect_btn = tk.Button(
            button_frame, 
            text="‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è", 
            command=self.disconnect_from_server,
            bg='#aa0000',
            fg='white',
            font=("Arial", 12, "bold"),
            width=20,
            state=tk.DISABLED
        )
        self.disconnect_btn.pack(side=tk.LEFT, padx=5)
        
        # –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        self.status_label = tk.Label(
            conn_frame, 
            text="‚ùå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω", 
            fg='red',
            bg='#2a2a2a',
            font=("Arial", 12, "bold")
        )
        self.status_label.pack(pady=10)
        
    def setup_character_tab(self, notebook):
        """–í–∫–ª–∞–¥–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
        char_frame = tk.Frame(notebook, bg='#2a2a2a')
        notebook.add(char_frame, text="üé≠ –ü–µ—Ä—Å–æ–Ω–∞–∂")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        create_frame = tk.LabelFrame(char_frame, text="–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", fg='white', bg='#2a2a2a')
        create_frame.pack(fill=tk.X, padx=10, pady=10)
        
        tk.Label(create_frame, text="–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:", fg='white', bg='#2a2a2a').grid(row=0, column=0, sticky=tk.W, padx=5, pady=5)
        tk.Entry(create_frame, textvariable=self.character_name, width=20).grid(row=0, column=1, padx=5, pady=5)
        
        # –†–∞—Å–∞
        tk.Label(create_frame, text="–†–∞—Å–∞:", fg='white', bg='#2a2a2a').grid(row=1, column=0, sticky=tk.W, padx=5, pady=5)
        race_combo = ttk.Combobox(create_frame, values=["–ß–µ–ª–æ–≤–µ–∫", "–≠–ª—å—Ñ", "–¢–µ–º–Ω—ã–π —ç–ª—å—Ñ", "–û—Ä–∫", "–ì–Ω–æ–º"], width=15)
        race_combo.set("–ß–µ–ª–æ–≤–µ–∫")
        race_combo.grid(row=1, column=1, padx=5, pady=5)
        
        # –ö–ª–∞—Å—Å
        tk.Label(create_frame, text="–ö–ª–∞—Å—Å:", fg='white', bg='#2a2a2a').grid(row=2, column=0, sticky=tk.W, padx=5, pady=5)
        class_combo = ttk.Combobox(create_frame, values=["–í–æ–∏–Ω", "–ú–∞–≥", "–õ—É—á–Ω–∏–∫", "–ñ—Ä–µ—Ü", "–†–∞–∑–±–æ–π–Ω–∏–∫"], width=15)
        class_combo.set("–í–æ–∏–Ω")
        class_combo.grid(row=2, column=1, padx=5, pady=5)
        
        # –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è
        create_btn = tk.Button(
            create_frame,
            text="‚ú® –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞",
            command=self.create_character,
            bg='#0066cc',
            fg='white',
            font=("Arial", 12, "bold")
        )
        create_btn.grid(row=3, column=0, columnspan=2, pady=10)
        
        # 3D –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä (–∑–∞–≥–ª—É—à–∫–∞)
        preview_frame = tk.LabelFrame(char_frame, text="3D –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä", fg='white', bg='#2a2a2a')
        preview_frame.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)
        
        preview_canvas = tk.Canvas(preview_frame, bg='#1a1a1a', width=400, height=300)
        preview_canvas.pack(expand=True, fill=tk.BOTH, padx=10, pady=10)
        
        # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è 3D –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        preview_canvas.create_text(200, 150, text="üéÆ 3D –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä\n(Unreal Engine 4.27)", 
                                 fill='#00ff00', font=("Arial", 16))
        
    def setup_settings_tab(self, notebook):
        """–í–∫–ª–∞–¥–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        settings_frame = tk.Frame(notebook, bg='#2a2a2a')
        notebook.add(settings_frame, text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        # –ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        graphics_frame = tk.LabelFrame(settings_frame, text="–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", fg='white', bg='#2a2a2a')
        graphics_frame.pack(fill=tk.X, padx=10, pady=10)
        
        # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ
        tk.Label(graphics_frame, text="–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ:", fg='white', bg='#2a2a2a').grid(row=0, column=0, sticky=tk.W, padx=5, pady=5)
        res_combo = ttk.Combobox(graphics_frame, values=["1920x1080", "2560x1440", "3840x2160"], width=15)
        res_combo.set("1920x1080")
        res_combo.grid(row=0, column=1, padx=5, pady=5)
        
        # –ö–∞—á–µ—Å—Ç–≤–æ –≥—Ä–∞—Ñ–∏–∫–∏
        tk.Label(graphics_frame, text="–ö–∞—á–µ—Å—Ç–≤–æ:", fg='white', bg='#2a2a2a').grid(row=1, column=0, sticky=tk.W, padx=5, pady=5)
        quality_combo = ttk.Combobox(graphics_frame, values=["Low", "Medium", "High", "Ultra"], width=15)
        quality_combo.set("High")
        quality_combo.grid(row=1, column=1, padx=5, pady=5)
        
        # VSync
        vsync_var = tk.BooleanVar(value=True)
        tk.Checkbutton(graphics_frame, text="VSync", variable=vsync_var, fg='white', bg='#2a2a2a').grid(row=2, column=0, sticky=tk.W, padx=5, pady=5)
        
        # –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
        fullscreen_var = tk.BooleanVar(value=False)
        tk.Checkbutton(graphics_frame, text="–ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º", variable=fullscreen_var, fg='white', bg='#2a2a2a').grid(row=2, column=1, sticky=tk.W, padx=5, pady=5)
        
        # –ó–≤—É–∫–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        audio_frame = tk.LabelFrame(settings_frame, text="–ó–≤—É–∫–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", fg='white', bg='#2a2a2a')
        audio_frame.pack(fill=tk.X, padx=10, pady=10)
        
        tk.Label(audio_frame, text="–ì—Ä–æ–º–∫–æ—Å—Ç—å –º—É–∑—ã–∫–∏:", fg='white', bg='#2a2a2a').grid(row=0, column=0, sticky=tk.W, padx=5, pady=5)
        music_scale = tk.Scale(audio_frame, from_=0, to=100, orient=tk.HORIZONTAL, bg='#2a2a2a', fg='white')
        music_scale.set(70)
        music_scale.grid(row=0, column=1, padx=5, pady=5)
        
        tk.Label(audio_frame, text="–ì—Ä–æ–º–∫–æ—Å—Ç—å –∑–≤—É–∫–æ–≤:", fg='white', bg='#2a2a2a').grid(row=1, column=0, sticky=tk.W, padx=5, pady=5)
        sound_scale = tk.Scale(audio_frame, from_=0, to=100, orient=tk.HORIZONTAL, bg='#2a2a2a', fg='white')
        sound_scale.set(80)
        sound_scale.grid(row=1, column=1, padx=5, pady=5)
        
    def setup_game_systems_tab(self, notebook):
        """–í–∫–ª–∞–¥–∫–∞ –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º"""
        systems_frame = tk.Frame(notebook, bg='#2a2a2a')
        notebook.add(systems_frame, text="üéÆ –°–∏—Å—Ç–µ–º—ã")
        
        # –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º
        systems_list = [
            "üé≠ L2Character System - –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π",
            "üëó Costume System - –°–∏—Å—Ç–µ–º–∞ –∫–æ—Å—Ç—é–º–æ–≤ (BnS-—Å—Ç–∏–ª—å)",
            "üîó Slave Trading System - –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–æ—Ä–≥–æ–≤–ª–∏",
            "üè∞ Adventurer Guild System - –ì–∏–ª—å–¥–∏—è –∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç–æ–≤",
            "üîû Adult Content Manager - –í–∑—Ä–æ—Å–ª—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç",
            "üé® PBR Material Manager - PBR –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
            "üåÖ HDR Manager - HDR —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥",
            "üí° Dynamic Lighting Manager - –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ",
            "‚ú® Particle Effect Manager - –°–∏—Å—Ç–µ–º–∞ —á–∞—Å—Ç–∏—Ü",
            "üìä Graphics Manager - –ú–µ–Ω–µ–¥–∂–µ—Ä –≥—Ä–∞—Ñ–∏–∫–∏",
            "üåê Network Manager - –°–µ—Ç–µ–≤–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä",
            "üîÑ State Synchronization - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è",
            "üõ°Ô∏è Anti-Cheat System - –°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
            "üêß Ubuntu Optimizer - Ubuntu –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è",
            "üì° L2J Protocol - L2J –ø—Ä–æ—Ç–æ–∫–æ–ª (–≤–µ—Ä—Å–∏—è 746)"
        ]
        
        for i, system in enumerate(systems_list):
            frame = tk.Frame(systems_frame, bg='#2a2a2a')
            frame.pack(fill=tk.X, padx=10, pady=2)
            
            status_label = tk.Label(frame, text="‚úÖ", fg='green', bg='#2a2a2a', font=("Arial", 12))
            status_label.pack(side=tk.LEFT, padx=5)
            
            system_label = tk.Label(frame, text=system, fg='white', bg='#2a2a2a', font=("Arial", 10))
            system_label.pack(side=tk.LEFT, padx=5)
            
    def setup_control_panel(self, parent):
        """–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        control_frame = tk.Frame(parent, bg='#1a1a1a')
        control_frame.pack(fill=tk.X, pady=10)
        
        # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
        self.launch_btn = tk.Button(
            control_frame,
            text="üöÄ –ó–ê–ü–£–°–¢–ò–¢–¨ –ò–ì–†–£",
            command=self.launch_game,
            bg='#ff6600',
            fg='white',
            font=("Arial", 16, "bold"),
            width=20,
            height=2
        )
        self.launch_btn.pack(side=tk.LEFT, padx=10)
        
        # –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏–≥—Ä—ã
        self.stop_btn = tk.Button(
            control_frame,
            text="‚èπÔ∏è –û–°–¢–ê–ù–û–í–ò–¢–¨ –ò–ì–†–£",
            command=self.stop_game,
            bg='#cc0000',
            fg='white',
            font=("Arial", 16, "bold"),
            width=20,
            height=2,
            state=tk.DISABLED
        )
        self.stop_btn.pack(side=tk.LEFT, padx=10)
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settings_btn = tk.Button(
            control_frame,
            text="‚öôÔ∏è –ù–ê–°–¢–†–û–ô–ö–ò",
            command=self.open_settings,
            bg='#0066cc',
            fg='white',
            font=("Arial", 12, "bold"),
            width=15
        )
        settings_btn.pack(side=tk.RIGHT, padx=10)
        
    def connect_to_server(self):
        """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É"""
        def connect_thread():
            try:
                self.status_label.config(text="üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...", fg='orange')
                self.root.update()
                
                # –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
                time.sleep(2)
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
                result = subprocess.run(['ping', '-c', '1', self.server_ip.get()], 
                                     capture_output=True, text=True, timeout=5)
                
                if result.returncode == 0:
                    self.is_connected = True
                    self.status_label.config(text="‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω", fg='green')
                    self.connect_btn.config(state=tk.DISABLED)
                    self.disconnect_btn.config(state=tk.NORMAL)
                    self.launch_btn.config(state=tk.NORMAL)
                    messagebox.showinfo("–£—Å–ø–µ—Ö", "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
                else:
                    self.status_label.config(text="‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è", fg='red')
                    messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É!")
                    
            except Exception as e:
                self.status_label.config(text="‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è", fg='red')
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {str(e)}")
        
        threading.Thread(target=connect_thread, daemon=True).start()
        
    def disconnect_from_server(self):
        """–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞"""
        self.is_connected = False
        self.status_label.config(text="‚ùå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω", fg='red')
        self.connect_btn.config(state=tk.NORMAL)
        self.disconnect_btn.config(state=tk.DISABLED)
        self.launch_btn.config(state=tk.DISABLED)
        self.stop_game()
        
    def create_character(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
        messagebox.showinfo("–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", 
                           f"–ü–µ—Ä—Å–æ–Ω–∞–∂ '{self.character_name.get()}' —Å–æ–∑–¥–∞–Ω!\n"
                           "–í—Å–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
        
    def launch_game(self):
        """–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã"""
        if not self.is_connected:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É!")
            return
            
        def launch_thread():
            try:
                self.launch_btn.config(state=tk.DISABLED)
                self.stop_btn.config(state=tk.NORMAL)
                
                # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∑–∞–ø—É—Å–∫–∞
                game_cmd = [
                    "python3", "-c",
                    f"""
import tkinter as tk
from tkinter import messagebox
import subprocess
import threading
import time

class GameWindow:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("Modern Lineage II - Game Window")
        self.root.geometry("1024x768")
        self.root.configure(bg='black')
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –æ–∫–Ω–∞
        self.game_frame = tk.Frame(self.root, bg='black')
        self.game_frame.pack(fill=tk.BOTH, expand=True)
        
        # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        self.game_canvas = tk.Canvas(self.game_frame, bg='#000011', width=1024, height=768)
        self.game_canvas.pack(expand=True, fill=tk.BOTH)
        
        # –ò–≥—Ä–æ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        self.setup_game_ui()
        
        # –ó–∞–ø—É—Å–∫ –∏–≥—Ä–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞
        self.game_loop()
        
    def setup_game_ui(self):
        # –ú–∏–Ω–∏–∫–∞—Ä—Ç–∞
        self.game_canvas.create_rectangle(20, 20, 200, 150, fill='#333333', outline='#666666')
        self.game_canvas.create_text(110, 85, text="üó∫Ô∏è –ú–∏–Ω–∏–∫–∞—Ä—Ç–∞", fill='white', font=("Arial", 12))
        
        # –ü–∞–Ω–µ–ª—å –∑–¥–æ—Ä–æ–≤—å—è/–º–∞–Ω—ã
        self.game_canvas.create_rectangle(20, 600, 300, 650, fill='#333333', outline='#666666')
        self.game_canvas.create_rectangle(25, 605, 295, 620, fill='red', outline='white')
        self.game_canvas.create_rectangle(25, 625, 295, 640, fill='blue', outline='white')
        self.game_canvas.create_text(160, 632, text="HP/MP", fill='white', font=("Arial", 10))
        
        # –ü–∞–Ω–µ–ª—å –Ω–∞–≤—ã–∫–æ–≤
        self.game_canvas.create_rectangle(400, 600, 1000, 700, fill='#333333', outline='#666666')
        for i in range(8):
            x = 420 + i * 70
            self.game_canvas.create_rectangle(x, 620, x+60, 680, fill='#444444', outline='#666666')
            self.game_canvas.create_text(x+30, 650, text=f"F{i+1}", fill='white', font=("Arial", 8))
        
        # –ß–∞—Ç
        self.game_canvas.create_rectangle(20, 700, 1000, 750, fill='#222222', outline='#666666')
        self.game_canvas.create_text(510, 725, text="üí¨ –ß–∞—Ç: –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Modern Lineage II!", fill='white', font=("Arial", 10))
        
        # 3D –∏–≥—Ä–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å
        self.game_canvas.create_rectangle(200, 150, 1000, 600, fill='#001122', outline='#666666')
        self.game_canvas.create_text(600, 375, text="üéÆ 3D –ò–ì–†–û–í–ê–Ø –û–ë–õ–ê–°–¢–¨\\n\\nUnreal Engine 4.27\\nPBR Materials\\nHDR Rendering\\nDynamic Lighting\\nParticle Effects", 
                                   fill='#00ff00', font=("Arial", 14), justify=tk.CENTER)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ
        self.game_canvas.create_text(50, 50, text="üë§ {username}\\n–£—Ä–æ–≤–µ–Ω—å: 1\\nHP: 100/100\\nMP: 100/100".format(username="{username}"), 
                                   fill='white', font=("Arial", 10), anchor='nw')
        
    def game_loop(self):
        # –ê–Ω–∏–º–∞—Ü–∏—è
        self.animate()
        self.root.after(100, self.game_loop)
        
    def animate(self):
        # –ü—Ä–æ—Å—Ç–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
        import random
        for _ in range(5):
            x = random.randint(200, 1000)
            y = random.randint(150, 600)
            self.game_canvas.create_oval(x-2, y-2, x+2, y+2, fill='#ffff00', outline='')
        
        # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —á–∞—Å—Ç–∏—Ü
        self.game_canvas.after(1000, lambda: self.game_canvas.delete("particle"))
        
    def run(self):
        self.root.mainloop()

# –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
game = GameWindow()
game.run()
"""
                ]
                
                # –ó–∞–ø—É—Å–∫ –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
                self.game_process = subprocess.Popen(game_cmd)
                
                messagebox.showinfo("–ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞", 
                                   "Modern Lineage II Client –∑–∞–ø—É—â–µ–Ω!\n"
                                   "–ò–≥—Ä–æ–≤–æ–µ –æ–∫–Ω–æ –¥–æ–ª–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å—Å—è —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.")
                
            except Exception as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã: {str(e)}")
                self.launch_btn.config(state=tk.NORMAL)
                self.stop_btn.config(state=tk.DISABLED)
        
        threading.Thread(target=launch_thread, daemon=True).start()
        
    def stop_game(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–≥—Ä—ã"""
        if self.game_process:
            self.game_process.terminate()
            self.game_process = None
            
        self.launch_btn.config(state=tk.NORMAL)
        self.stop_btn.config(state=tk.DISABLED)
        
    def open_settings(self):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        messagebox.showinfo("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–≥—Ä—ã –æ—Ç–∫—Ä—ã—Ç—ã!")
        
    def load_config(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        try:
            if os.path.exists('game_config.json'):
                with open('game_config.json', 'r') as f:
                    config = json.load(f)
                    self.server_ip.set(config.get('server_ip', '127.0.0.1'))
                    self.server_port.set(config.get('server_port', '2106'))
                    self.game_port.set(config.get('game_port', '7777'))
                    self.username.set(config.get('username', 'admin'))
                    self.character_name.set(config.get('character_name', 'TestPlayer'))
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            
    def save_config(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        try:
            config = {
                'server_ip': self.server_ip.get(),
                'server_port': self.server_port.get(),
                'game_port': self.game_port.get(),
                'username': self.username.get(),
                'character_name': self.character_name.get()
            }
            with open('game_config.json', 'w') as f:
                json.dump(config, f, indent=2)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
            
    def run(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.root.protocol("WM_DELETE_WINDOW", self.on_closing)
        self.root.mainloop()
        
    def on_closing(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.save_config()
        self.stop_game()
        self.root.destroy()

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    try:
        import PIL
    except ImportError:
        print("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
        subprocess.run([sys.executable, "-m", "pip", "install", "Pillow"], check=True)
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app = ModernLineage2Client()
    app.run()
