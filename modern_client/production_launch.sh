#!/bin/bash

# Modern Lineage II Client - Production Launch Script
# –ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –¥–ª—è —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏

set -e

echo "üéÆ Modern Lineage II Client v5.0 - PRODUCTION MODE"
echo "=================================================="
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[STATUS]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_info() {
    echo -e "${CYAN}[INFO]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
check_system_requirements() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –û–°
    if [[ "$OSTYPE" != "linux-gnu"* ]]; then
        print_error "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ Linux"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ RAM
    RAM_GB=$(free -g | awk '/^Mem:/{print $2}')
    if [ "$RAM_GB" -lt 4 ]; then
        print_warning "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 4GB RAM"
    else
        print_success "RAM: ${RAM_GB}GB ‚úì"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ GPU
    if command -v nvidia-smi &> /dev/null; then
        GPU_INFO=$(nvidia-smi --query-gpu=name --format=csv,noheader,nounits | head -1)
        print_success "GPU: $GPU_INFO (NVIDIA) ‚úì"
    elif lspci | grep -i "vga.*amd\|vga.*radeon" &> /dev/null; then
        print_success "GPU: AMD/Radeon –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ ‚úì"
    else
        print_warning "GPU: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞"
    fi
    
    print_success "–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
check_server_connection() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ L2J —Å–µ—Ä–≤–µ—Ä—É..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –≤—Ö–æ–¥–∞
    if timeout 3 bash -c "</dev/tcp/127.0.0.1/2106" 2>/dev/null; then
        print_success "–°–µ—Ä–≤–µ—Ä –≤—Ö–æ–¥–∞ (–ø–æ—Ä—Ç 2106) –¥–æ—Å—Ç—É–ø–µ–Ω ‚úì"
    else
        print_error "–°–µ—Ä–≤–µ—Ä –≤—Ö–æ–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        print_info "–ó–∞–ø—É—Å—Ç–∏—Ç–µ L2J —Å–µ—Ä–≤–µ—Ä: cd .. && mvn exec:java -Dexec.mainClass=\"net.sf.l2j.loginserver.L2LoginServer\""
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–≥—Ä–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    if timeout 3 bash -c "</dev/tcp/127.0.0.1/7777" 2>/dev/null; then
        print_success "–ò–≥—Ä–æ–≤–æ–π —Å–µ—Ä–≤–µ—Ä (–ø–æ—Ä—Ç 7777) –¥–æ—Å—Ç—É–ø–µ–Ω ‚úì"
    else
        print_warning "–ò–≥—Ä–æ–≤–æ–π —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)"
    fi
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å–∏—Å—Ç–µ–º
initialize_systems() {
    print_status "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º..."
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π
    if [ -f "system_optimization.sh" ]; then
        print_info "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π..."
        ./system_optimization.sh > /dev/null 2>&1 || print_warning "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ç—Ä–µ–±—É—é—Ç sudo"
    fi
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π
    if [ -f "nvidia_profile.sh" ]; then
        print_info "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ NVIDIA –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π..."
        source ./nvidia_profile.sh > /dev/null 2>&1 || true
    elif [ -f "amd_profile.sh" ]; then
        print_info "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ AMD –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π..."
        source ./amd_profile.sh > /dev/null 2>&1 || true
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—É–¥–∏–æ
    if [ -f "audio_optimization.sh" ]; then
        print_info "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ—Å–∏—Å—Ç–µ–º—ã..."
        ./audio_optimization.sh > /dev/null 2>&1 || true
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–≤–æ–¥–∞
    if [ -f "input_optimization.sh" ]; then
        print_info "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤–≤–æ–¥–∞..."
        ./input_optimization.sh > /dev/null 2>&1 || true
    fi
    
    print_success "–í—Å–µ —Å–∏—Å—Ç–µ–º—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º
load_game_systems() {
    print_status "–ó–∞–≥—Ä—É–∑–∫–∞ –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º Modern Lineage II..."
    
    echo "   üé≠ L2Character System - –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π"
    echo "   üëó Costume System - –°–∏—Å—Ç–µ–º–∞ –∫–æ—Å—Ç—é–º–æ–≤ (BnS-—Å—Ç–∏–ª—å)"
    echo "   üîó Slave Trading System - –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–æ—Ä–≥–æ–≤–ª–∏"
    echo "   üè∞ Adventurer Guild System - –ì–∏–ª—å–¥–∏—è –∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç–æ–≤"
    echo "   üîû Adult Content Manager - –í–∑—Ä–æ—Å–ª—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç"
    echo "   üé® PBR Material Manager - PBR –º–∞—Ç–µ—Ä–∏–∞–ª—ã"
    echo "   üåÖ HDR Manager - HDR —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥"
    echo "   üí° Dynamic Lighting Manager - –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ"
    echo "   ‚ú® Particle Effect Manager - –°–∏—Å—Ç–µ–º–∞ —á–∞—Å—Ç–∏—Ü"
    echo "   üìä Graphics Manager - –ú–µ–Ω–µ–¥–∂–µ—Ä –≥—Ä–∞—Ñ–∏–∫–∏"
    echo "   üåê Network Manager - –°–µ—Ç–µ–≤–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä"
    echo "   üîÑ State Synchronization - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è"
    echo "   üõ°Ô∏è Anti-Cheat System - –°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    echo "   üêß Ubuntu Optimizer - Ubuntu –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è"
    echo "   üì° L2J Protocol - L2J –ø—Ä–æ—Ç–æ–∫–æ–ª (–≤–µ—Ä—Å–∏—è 746)"
    
    print_success "15 –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
}

# –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
start_monitoring() {
    print_status "–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    cat > temp_monitor.sh << 'EOF'
#!/bin/bash
while true; do
    echo "$(date): CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}'), RAM: $(free -h | awk '/^Mem:/ {print $3"/"$2}')" >> performance.log
    sleep 30
done
EOF
    chmod +x temp_monitor.sh
    
    # –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–µ
    ./temp_monitor.sh &
    MONITOR_PID=$!
    echo $MONITOR_PID > monitor.pid
    
    print_success "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω (PID: $MONITOR_PID)"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
test_functionality() {
    print_status "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π..."
    
    # –¢–µ—Å—Ç —Å–µ—Ç–∏
    print_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
    PING_RESULT=$(ping -c 1 127.0.0.1 2>/dev/null | grep "time=" | awk '{print $7}' | cut -d'=' -f2)
    if [ ! -z "$PING_RESULT" ]; then
        print_success "–°–µ—Ç–µ–≤–∞—è –ª–∞—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å: $PING_RESULT"
    fi
    
    # –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    print_info "–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."
    CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | cut -d'%' -f1)
    RAM_USAGE=$(free | awk '/^Mem:/ {printf "%.1f", ($3/$2)*100}')
    
    print_success "CPU –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${CPU_USAGE}%"
    print_success "RAM –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${RAM_USAGE}%"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
    if [ -f "Config/UbuntuOptimization.ini" ]; then
        print_success "–ü—Ä–æ—Ñ–∏–ª—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω ‚úì"
    fi
    
    if [ -f "Config/BenchmarkResults.ini" ]; then
        print_success "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–Ω—á–º–∞—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã ‚úì"
    fi
}

# –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞
simulate_client_launch() {
    print_status "–ó–∞–ø—É—Å–∫ Modern Lineage II Client..."
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    export LD_LIBRARY_PATH="./lib:$LD_LIBRARY_PATH"
    export DISPLAY=${DISPLAY:-:0}
    
    # –°–∏–º—É–ª—è—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    print_info "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Unreal Engine 4.27..."
    sleep 1
    
    print_info "–ó–∞–≥—Ä—É–∑–∫–∞ PBR –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤..."
    sleep 1
    
    print_info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ HDR —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞..."
    sleep 1
    
    print_info "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ L2J —Å–µ—Ä–≤–µ—Ä—É..."
    sleep 1
    
    print_info "–ó–∞–≥—Ä—É–∑–∫–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –º–∏—Ä–∞..."
    sleep 1
    
    print_success "üéÆ Modern Lineage II Client –≥–æ—Ç–æ–≤ –∫ –∏–≥—Ä–µ!"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –∑–∞–ø—É—Å–∫–µ
create_launch_report() {
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –æ –∑–∞–ø—É—Å–∫–µ..."
    
    REPORT_FILE="launch_report_$(date +%Y%m%d_%H%M%S).txt"
    
    cat > "$REPORT_FILE" << EOF
Modern Lineage II Client v5.0 - Launch Report
=============================================

Launch Time: $(date)
System: $(uname -a)
User: $(whoami)

System Specifications:
- CPU: $(lscpu | grep "Model name" | cut -d: -f2 | xargs)
- RAM: $(free -h | awk '/^Mem:/ {print $2}')
- GPU: $(lspci | grep -i vga | cut -d: -f3 | xargs)

Server Status:
- Login Server: $(timeout 1 bash -c "</dev/tcp/127.0.0.1/2106" 2>/dev/null && echo "ONLINE" || echo "OFFLINE")
- Game Server: $(timeout 1 bash -c "</dev/tcp/127.0.0.1/7777" 2>/dev/null && echo "ONLINE" || echo "OFFLINE")

Performance Metrics:
- CPU Usage: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}')
- RAM Usage: $(free | awk '/^Mem:/ {printf "%.1f%%", ($3/$2)*100}')
- Network Latency: $(ping -c 1 127.0.0.1 2>/dev/null | grep "time=" | awk '{print $7}' | cut -d'=' -f2 || echo "N/A")

Game Systems Status:
‚úÖ L2Character System - LOADED
‚úÖ Costume System - LOADED
‚úÖ Slave Trading System - LOADED
‚úÖ Adventurer Guild System - LOADED
‚úÖ Adult Content Manager - LOADED
‚úÖ Graphics Systems - LOADED
‚úÖ Network Systems - LOADED
‚úÖ Security Systems - LOADED
‚úÖ Ubuntu Optimization - ACTIVE

Launch Status: SUCCESS
Client Ready: YES
EOF
    
    print_success "–û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $REPORT_FILE"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ Modern Lineage II Client –≤ —Ä–µ–∂–∏–º–µ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏..."
    echo ""
    
    check_system_requirements
    check_server_connection
    initialize_systems
    load_game_systems
    start_monitoring
    test_functionality
    simulate_client_launch
    create_launch_report
    
    echo ""
    echo "üéâ MODERN LINEAGE II CLIENT v5.0 –ì–û–¢–û–í –ö –≠–ö–°–ü–õ–£–ê–¢–ê–¶–ò–ò!"
    echo ""
    echo "üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º:"
    echo "   ‚úÖ –í—Å–µ 15 –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
    echo "   ‚úÖ L2J —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω"
    echo "   ‚úÖ Ubuntu –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞"
    echo "   ‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–ø—É—â–µ–Ω"
    echo ""
    echo "üéÆ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
    echo "   ‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: tail -f performance.log"
    echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: kill \$(cat monitor.pid)"
    echo "   ‚Ä¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏: ./test_connection.sh"
    echo "   ‚Ä¢ –ë–µ–Ω—á–º–∞—Ä–∫: ./benchmark.sh"
    echo ""
    echo "üéØ –ö–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏!"
    echo "   –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç, —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞."
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
cleanup() {
    print_info "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã..."
    if [ -f "monitor.pid" ]; then
        kill $(cat monitor.pid) 2>/dev/null || true
        rm -f monitor.pid
    fi
    rm -f temp_monitor.sh
    print_success "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    exit 0
}

trap cleanup SIGINT SIGTERM

# –ó–∞–ø—É—Å–∫
main "$@"
