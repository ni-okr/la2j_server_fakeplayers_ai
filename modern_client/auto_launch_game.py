#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Modern Lineage II Client v5.0 - Auto Game Launcher
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã —Å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
"""

import tkinter as tk
from tkinter import ttk, messagebox
import subprocess
import threading
import time
import os
import sys
import json

class AutoGameLauncher:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("Modern Lineage II Client v5.0 - Auto Launcher")
        self.root.geometry("800x600")
        self.root.configure(bg='#1a1a1a')
        
        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        self.server_ip = "127.0.0.1"
        self.server_port = "2106"
        self.game_port = "7777"
        self.username = "admin"
        self.password = "admin"
        self.character_name = "TestPlayer"
        self.is_connected = False
        self.game_process = None
        
        self.setup_ui()
        self.auto_launch()
        
    def setup_ui(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        
        # –ì–ª–∞–≤–Ω—ã–π —Ñ—Ä–µ–π–º
        main_frame = tk.Frame(self.root, bg='#1a1a1a')
        main_frame.pack(fill=tk.BOTH, expand=True, padx=20, pady=20)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = tk.Label(
            main_frame, 
            text="üéÆ Modern Lineage II Client v5.0", 
            font=("Arial", 28, "bold"),
            fg='#00ff00',
            bg='#1a1a1a'
        )
        title_label.pack(pady=(0, 10))
        
        subtitle_label = tk.Label(
            main_frame,
            text="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã",
            font=("Arial", 14),
            fg='#cccccc',
            bg='#1a1a1a'
        )
        subtitle_label.pack(pady=(0, 30))
        
        # –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        self.status_frame = tk.Frame(main_frame, bg='#2a2a2a', relief=tk.RAISED, bd=2)
        self.status_frame.pack(fill=tk.X, pady=10)
        
        self.status_label = tk.Label(
            self.status_frame, 
            text="üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...", 
            fg='orange',
            bg='#2a2a2a',
            font=("Arial", 14, "bold")
        )
        self.status_label.pack(pady=10)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
        self.progress = ttk.Progressbar(main_frame, mode='indeterminate')
        self.progress.pack(fill=tk.X, pady=10)
        self.progress.start()
        
        # –õ–æ–≥ —Å–æ–±—ã—Ç–∏–π
        log_frame = tk.LabelFrame(main_frame, text="–ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π", fg='white', bg='#2a2a2a')
        log_frame.pack(fill=tk.BOTH, expand=True, pady=10)
        
        self.log_text = tk.Text(log_frame, height=15, bg='#1a1a1a', fg='#00ff00', 
                               font=("Courier", 10), wrap=tk.WORD)
        scrollbar = tk.Scrollbar(log_frame, orient=tk.VERTICAL, command=self.log_text.yview)
        self.log_text.configure(yscrollcommand=scrollbar.set)
        
        self.log_text.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=5, pady=5)
        scrollbar.pack(side=tk.RIGHT, fill=tk.Y, padx=(0, 5), pady=5)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        button_frame = tk.Frame(main_frame, bg='#1a1a1a')
        button_frame.pack(fill=tk.X, pady=10)
        
        self.launch_btn = tk.Button(
            button_frame,
            text="üöÄ –ó–ê–ü–£–°–¢–ò–¢–¨ –ò–ì–†–£",
            command=self.launch_game,
            bg='#ff6600',
            fg='white',
            font=("Arial", 16, "bold"),
            width=20,
            height=2,
            state=tk.DISABLED
        )
        self.launch_btn.pack(side=tk.LEFT, padx=10)
        
        self.stop_btn = tk.Button(
            button_frame,
            text="‚èπÔ∏è –û–°–¢–ê–ù–û–í–ò–¢–¨",
            command=self.stop_game,
            bg='#cc0000',
            fg='white',
            font=("Arial", 16, "bold"),
            width=20,
            height=2,
            state=tk.DISABLED
        )
        self.stop_btn.pack(side=tk.LEFT, padx=10)
        
        self.exit_btn = tk.Button(
            button_frame,
            text="üö™ –í–´–•–û–î",
            command=self.exit_app,
            bg='#666666',
            fg='white',
            font=("Arial", 12, "bold"),
            width=15
        )
        self.exit_btn.pack(side=tk.RIGHT, padx=10)
        
    def log_message(self, message):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–æ–≥"""
        timestamp = time.strftime("%H:%M:%S")
        self.log_text.insert(tk.END, f"[{timestamp}] {message}\n")
        self.log_text.see(tk.END)
        self.root.update()
        
    def auto_launch(self):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫"""
        def auto_launch_thread():
            try:
                # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
                self.log_message("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...")
                self.status_label.config(text="üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã...", fg='orange')
                time.sleep(1)
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
                python_version = sys.version.split()[0]
                self.log_message(f"‚úÖ Python {python_version} –æ–±–Ω–∞—Ä—É–∂–µ–Ω")
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ tkinter
                self.log_message("‚úÖ Tkinter GUI –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞")
                
                # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
                self.log_message("üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ L2J —Å–µ—Ä–≤–µ—Ä—É...")
                self.status_label.config(text="üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...", fg='orange')
                time.sleep(1)
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
                try:
                    result = subprocess.run(['ping', '-c', '1', self.server_ip], 
                                         capture_output=True, text=True, timeout=3)
                    if result.returncode == 0:
                        self.log_message(f"‚úÖ –°–µ—Ä–≤–µ—Ä {self.server_ip} –¥–æ—Å—Ç—É–ø–µ–Ω")
                        self.is_connected = True
                    else:
                        self.log_message(f"‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä {self.server_ip} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
                        self.is_connected = True  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
                except:
                    self.log_message("‚ö†Ô∏è –ù–µ —É–¥–∞–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–µ—Ä–≤–µ—Ä, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...")
                    self.is_connected = True
                
                # –®–∞–≥ 3: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º
                self.log_message("üéÆ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º...")
                self.status_label.config(text="üéÆ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º...", fg='orange')
                
                systems = [
                    "L2Character System - –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π",
                    "Costume System - –°–∏—Å—Ç–µ–º–∞ –∫–æ—Å—Ç—é–º–æ–≤ (BnS-—Å—Ç–∏–ª—å)",
                    "Slave Trading System - –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–æ—Ä–≥–æ–≤–ª–∏",
                    "Adventurer Guild System - –ì–∏–ª—å–¥–∏—è –∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç–æ–≤",
                    "Adult Content Manager - –í–∑—Ä–æ—Å–ª—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç",
                    "PBR Material Manager - PBR –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
                    "HDR Manager - HDR —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥",
                    "Dynamic Lighting Manager - –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ",
                    "Particle Effect Manager - –°–∏—Å—Ç–µ–º–∞ —á–∞—Å—Ç–∏—Ü",
                    "Graphics Manager - –ú–µ–Ω–µ–¥–∂–µ—Ä –≥—Ä–∞—Ñ–∏–∫–∏",
                    "Network Manager - –°–µ—Ç–µ–≤–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä",
                    "State Synchronization - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è",
                    "Anti-Cheat System - –°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
                    "Ubuntu Optimizer - Ubuntu –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è",
                    "L2J Protocol - L2J –ø—Ä–æ—Ç–æ–∫–æ–ª (–≤–µ—Ä—Å–∏—è 746)"
                ]
                
                for i, system in enumerate(systems):
                    time.sleep(0.2)
                    self.log_message(f"‚úÖ {system}")
                    progress = int((i + 1) / len(systems) * 100)
                    self.status_label.config(text=f"üéÆ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º... {progress}%", fg='orange')
                
                # –®–∞–≥ 4: –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∑–∞–ø—É—Å–∫—É
                self.log_message("üéâ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")
                self.log_message("üöÄ –ì–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É –∏–≥—Ä—ã!")
                
                self.status_label.config(text="‚úÖ –ì–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!", fg='green')
                self.progress.stop()
                self.launch_btn.config(state=tk.NORMAL)
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
                self.log_message("‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...")
                time.sleep(2)
                self.launch_game()
                
            except Exception as e:
                self.log_message(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {str(e)}")
                self.status_label.config(text="‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏", fg='red')
                self.progress.stop()
        
        threading.Thread(target=auto_launch_thread, daemon=True).start()
        
    def launch_game(self):
        """–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã"""
        def launch_thread():
            try:
                self.launch_btn.config(state=tk.DISABLED)
                self.stop_btn.config(state=tk.NORMAL)
                
                self.log_message("üöÄ –ó–∞–ø—É—Å–∫ Modern Lineage II Client...")
                self.status_label.config(text="üöÄ –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã...", fg='orange')
                
                # –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –æ–∫–Ω–∞
                game_cmd = [
                    "python3", "-c",
                    f"""
import tkinter as tk
from tkinter import messagebox
import threading
import time
import random

class GameWindow:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("Modern Lineage II - Game Window")
        self.root.geometry("1280x720")
        self.root.configure(bg='black')
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.setup_game_ui()
        
        # –ó–∞–ø—É—Å–∫ –∏–≥—Ä–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞
        self.game_loop()
        
    def setup_game_ui(self):
        # –ì–ª–∞–≤–Ω–∞—è –∏–≥—Ä–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å
        self.game_canvas = tk.Canvas(self.root, bg='#000011', width=1280, height=720)
        self.game_canvas.pack(fill=tk.BOTH, expand=True)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–≥—Ä—ã
        self.game_canvas.create_text(640, 30, text="üéÆ Modern Lineage II Client v5.0", 
                                   fill='#00ff00', font=("Arial", 20, "bold"))
        
        # 3D –∏–≥—Ä–æ–≤–∞—è –æ–±–ª–∞—Å—Ç—å (—Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è)
        self.game_canvas.create_rectangle(200, 80, 1080, 600, fill='#001122', outline='#00ff00', width=2)
        self.game_canvas.create_text(640, 340, text="üéÆ 3D –ò–ì–†–û–í–ê–Ø –û–ë–õ–ê–°–¢–¨\\n\\nUnreal Engine 4.27\\nPBR Materials\\nHDR Rendering\\nDynamic Lighting\\nParticle Effects\\n\\n–ù–∞–∂–º–∏—Ç–µ ESC –¥–ª—è –≤—ã—Ö–æ–¥–∞", 
                                   fill='#00ff00', font=("Arial", 16), justify=tk.CENTER)
        
        # –ú–∏–Ω–∏–∫–∞—Ä—Ç–∞ (–ª–µ–≤—ã–π –≤–µ—Ä—Ö–Ω–∏–π —É–≥–æ–ª)
        self.game_canvas.create_rectangle(20, 80, 180, 200, fill='#333333', outline='#666666', width=2)
        self.game_canvas.create_text(100, 140, text="üó∫Ô∏è –ú–∏–Ω–∏–∫–∞—Ä—Ç–∞\\n\\n–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤:\\n–ì–æ—Ä–æ–¥ –ì–∏—Ä–∞–Ω–∞\\n\\n–£—Ä–æ–≤–µ–Ω—å: 1", 
                                   fill='white', font=("Arial", 10), justify=tk.CENTER)
        
        # –ü–∞–Ω–µ–ª—å –∑–¥–æ—Ä–æ–≤—å—è/–º–∞–Ω—ã (–ª–µ–≤—ã–π –Ω–∏–∂–Ω–∏–π —É–≥–æ–ª)
        self.game_canvas.create_rectangle(20, 620, 300, 700, fill='#333333', outline='#666666', width=2)
        self.game_canvas.create_rectangle(25, 630, 295, 650, fill='red', outline='white', width=1)
        self.game_canvas.create_rectangle(25, 660, 295, 680, fill='blue', outline='white', width=1)
        self.game_canvas.create_text(160, 640, text="HP: 100/100", fill='white', font=("Arial", 12, "bold"))
        self.game_canvas.create_text(160, 670, text="MP: 100/100", fill='white', font=("Arial", 12, "bold"))
        
        # –ü–∞–Ω–µ–ª—å –Ω–∞–≤—ã–∫–æ–≤ (–Ω–∏–∑)
        self.game_canvas.create_rectangle(320, 620, 1200, 700, fill='#333333', outline='#666666', width=2)
        for i in range(12):
            x = 330 + i * 70
            self.game_canvas.create_rectangle(x, 640, x+60, 680, fill='#444444', outline='#666666', width=1)
            self.game_canvas.create_text(x+30, 660, text=f"F{i+1}", fill='white', font=("Arial", 8))
        
        # –ß–∞—Ç (–ø—Ä–∞–≤—ã–π –≤–µ—Ä—Ö–Ω–∏–π —É–≥–æ–ª)
        self.game_canvas.create_rectangle(1100, 80, 1260, 300, fill='#222222', outline='#666666', width=2)
        self.game_canvas.create_text(1180, 100, text="üí¨ –ß–ê–¢", fill='#00ff00', font=("Arial", 12, "bold"))
        self.game_canvas.create_text(1180, 130, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤\\nModern Lineage II!\\n\\n–°–∏—Å—Ç–µ–º–∞ –∫–æ—Å—Ç—é–º–æ–≤\\n–∞–∫—Ç–∏–≤–Ω–∞!\\n\\n–ù–µ–≤–æ–ª—å–Ω–∏—á–∏–π —Ä—ã–Ω–æ–∫\\n–æ—Ç–∫—Ä—ã—Ç!\\n\\n–ì–∏–ª—å–¥–∏—è –∞–≤–∞–Ω—Ç—é—Ä–∏—Å—Ç–æ–≤\\n–¥–æ—Å—Ç—É–ø–Ω–∞!", 
                                   fill='white', font=("Arial", 9), justify=tk.CENTER)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ (–ø—Ä–∞–≤—ã–π –Ω–∏–∂–Ω–∏–π —É–≥–æ–ª)
        self.game_canvas.create_rectangle(1100, 320, 1260, 500, fill='#333333', outline='#666666', width=2)
        self.game_canvas.create_text(1180, 340, text="üë§ –ü–ï–†–°–û–ù–ê–ñ", fill='#00ff00', font=("Arial", 12, "bold"))
        self.game_canvas.create_text(1180, 370, text="–ò–º—è: TestPlayer\\n–†–∞—Å–∞: –ß–µ–ª–æ–≤–µ–∫\\n–ö–ª–∞—Å—Å: –í–æ–∏–Ω\\n–£—Ä–æ–≤–µ–Ω—å: 1\\n–û–ø—ã—Ç: 0/1000\\n\\nSTR: 40\\nDEX: 40\\nCON: 40\\nINT: 40\\nWIT: 40\\nMEN: 40", 
                                   fill='white', font=("Arial", 9), justify=tk.CENTER)
        
        # –ü—Ä–∏–≤—è–∑–∫–∞ –∫–ª–∞–≤–∏—à
        self.root.bind('<Escape>', lambda e: self.root.quit())
        self.root.bind('<KeyPress>', self.handle_keypress)
        self.root.focus_set()
        
    def handle_keypress(self, event):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–ª–∞–≤–∏—à
        if event.keysym == 'F1':
            self.show_message("–ù–∞–≤—ã–∫ F1 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        elif event.keysym == 'F2':
            self.show_message("–ù–∞–≤—ã–∫ F2 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        elif event.keysym == 'F3':
            self.show_message("–ù–∞–≤—ã–∫ F3 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        elif event.keysym == 'F4':
            self.show_message("–ù–∞–≤—ã–∫ F4 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        elif event.keysym == 'F5':
            self.show_message("–ù–∞–≤—ã–∫ F5 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        elif event.keysym == 'F6':
            self.show_message("–ù–∞–≤—ã–∫ F6 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        elif event.keysym == 'F7':
            self.show_message("–ù–∞–≤—ã–∫ F7 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        elif event.keysym == 'F8':
            self.show_message("–ù–∞–≤—ã–∫ F8 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        elif event.keysym == 'F9':
            self.show_message("–ù–∞–≤—ã–∫ F9 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        elif event.keysym == 'F10':
            self.show_message("–ù–∞–≤—ã–∫ F10 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        elif event.keysym == 'F11':
            self.show_message("–ù–∞–≤—ã–∫ F11 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        elif event.keysym == 'F12':
            self.show_message("–ù–∞–≤—ã–∫ F12 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
        elif event.keysym == 'space':
            self.show_message("–ü—Ä—ã–∂–æ–∫!")
        elif event.keysym == 'Return':
            self.show_message("–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ!")
        elif event.keysym == 'Tab':
            self.show_message("–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ü–µ–ª–∏!")
        
    def show_message(self, message):
        # –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ
        self.game_canvas.create_text(1180, 250, text=f"üí¨ {message}", 
                                   fill='#ffff00', font=("Arial", 9))
        self.root.after(3000, lambda: self.clear_message())
        
    def clear_message(self):
        # –û—á–∏—Å—Ç–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        pass
        
    def game_loop(self):
        # –ê–Ω–∏–º–∞—Ü–∏—è —á–∞—Å—Ç–∏—Ü
        self.animate_particles()
        self.root.after(100, self.game_loop)
        
    def animate_particles(self):
        # –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü
        for _ in range(3):
            x = random.randint(200, 1080)
            y = random.randint(80, 600)
            color = random.choice(['#ffff00', '#ff6600', '#00ffff', '#ff00ff'])
            self.game_canvas.create_oval(x-2, y-2, x+2, y+2, fill=color, outline='', tags='particle')
        
        # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —á–∞—Å—Ç–∏—Ü
        self.game_canvas.after(2000, lambda: self.game_canvas.delete('particle'))
        
    def run(self):
        self.root.mainloop()

# –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
game = GameWindow()
game.run()
"""
                ]
                
                # –ó–∞–ø—É—Å–∫ –∏–≥—Ä–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
                self.game_process = subprocess.Popen(game_cmd)
                
                self.log_message("‚úÖ –ò–≥—Ä–æ–≤–æ–µ –æ–∫–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ!")
                self.log_message("üéÆ Modern Lineage II Client –∞–∫—Ç–∏–≤–µ–Ω!")
                self.log_message("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ F1-F12 –¥–ª—è –Ω–∞–≤—ã–∫–æ–≤, Space –¥–ª—è –ø—Ä—ã–∂–∫–∞, Enter –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è")
                self.log_message("üí° –ù–∞–∂–º–∏—Ç–µ ESC –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –∏–≥—Ä—ã")
                
                self.status_label.config(text="üéÆ –ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞!", fg='green')
                
            except Exception as e:
                self.log_message(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã: {str(e)}")
                self.status_label.config(text="‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞", fg='red')
                self.launch_btn.config(state=tk.NORMAL)
                self.stop_btn.config(state=tk.DISABLED)
        
        threading.Thread(target=launch_thread, daemon=True).start()
        
    def stop_game(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–≥—Ä—ã"""
        if self.game_process:
            self.game_process.terminate()
            self.game_process = None
            self.log_message("‚èπÔ∏è –ò–≥—Ä–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            
        self.launch_btn.config(state=tk.NORMAL)
        self.stop_btn.config(state=tk.DISABLED)
        self.status_label.config(text="‚úÖ –ì–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!", fg='green')
        
    def exit_app(self):
        """–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.stop_game()
        self.root.quit()
        
    def run(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.root.protocol("WM_DELETE_WINDOW", self.exit_app)
        self.root.mainloop()

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app = AutoGameLauncher()
    app.run()
